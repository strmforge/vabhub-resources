apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-renamer
  namespace: media-renamer
  labels:
    app: media-renamer
    version: v1.1.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: media-renamer
  template:
    metadata:
      labels:
        app: media-renamer
        version: v1.1.0
    spec:
      containers:
      - name: media-renamer
        image: media-renamer:latest
        ports:
        - containerPort: 8000
        env:
        - name: APP_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: media-renamer-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: media-renamer-secrets
              key: redis-url
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: config-volume
        configMap:
          name: media-renamer-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: media-renamer-data-pvc
      - name: logs-volume
        emptyDir: {}
      imagePullSecrets:
      - name: registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: media-renamer-service
  namespace: media-renamer
spec:
  selector:
    app: media-renamer
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: media-renamer-ingress
  namespace: media-renamer
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - media-renamer.example.com
    secretName: media-renamer-tls
  rules:
  - host: media-renamer.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: media-renamer-service
            port:
              number: 8000